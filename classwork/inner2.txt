package Inheritanceex;public class Car {	void drive()	{		System.out.println("try out");	}	public static void main(String[] ar)	{		Sample s=new Sample();		s.display();	}}class Toyota extends Car{	@Override	void drive()	{		System.out.println("try out toyota");	}	}class Sample{	public void display() {		new Car();				Car car=new Car()		{			@Override			public void drive()			{				System.out.println("overriden method in nameless class");			}		};		car.drive();		}}



public class Car {	int carno=100;		/*@Override	public int hashCode()	{		return this.carno*4;	}*/		public static void main(String[] a)	{		System.out.println(		new Car()		{			@Override			public int hashCode()			{				return this.carno/=3;			}		}.hashCode()			);						//System.out.println(new Car().hashCode());	}}


hashCode in Java is a function that returns the hashcode value of an object on calling. It returns an integer or a 4 bytes value which is generated by the hashing algorithm. The process of assigning a unique value to an object or attribute using an algorithm, which enables quicker access, is known as hashing.




package innerclasspack;public class NestedStaticExample {	public static void main(String[] a)	{		Outer.Inner inner=new Outer().new Inner();		inner.displayinner();				Outer outer=new Outer();				outer.displayOuter();	}}class Outer{	String outerMessage="outer";	class Inner	{		String innerMessage="inner";		void displayinner()		{			System.out.println("Hello inner class"+outerMessage+ " "+innerMessage );		}	};		void displayOuter()	{		System.out.println("Hello OUTER class"+outerMessage+ " "+new Inner().innerMessage );	}}
