package collectionpack;public class GenericDemo<T,E> //place holder//public class GenericDemo<Integer, Float>{	T a, b;	E x,y;				public GenericDemo() {		super();	}	public GenericDemo(T a, T b,E x, E y) {		super();		this.a = a;		this.b = b;		this.x=x;		this.y=y;	}		public T getA() {		return a;	}	public void setA(T a) {		this.a = a;	}	public T getB() {		return b;	}	public void setB(T b) {		this.b = b;	}	public E getX() {		return x;	}	public void setX(E x) {		this.x = x;	}	public E getY() {		return y;	}	public void setY(E y) {		this.y = y;	}	public static void main(String[] args) {		// TODO Auto-generated method stub		GenericDemo demo=new GenericDemo();		T E		GenericDemo<Integer,Float> number;//class is of type Integer		number=new GenericDemo<Integer,Float>(12,34,7.8f,9.87f);		System.out.println(number.getA()+" "+number.getB()+" "+number.getX()+" "+number.getY());;			GenericDemo<Float,Boolean> number1;//class is of type Integer
number=new GenericDemo<Integer,Float>(12,34,7.8f,9.87f);		System.out.println(number.getA()+" "+number.getB()+" "+number.getX()+" "+number.getY());;			GenericDemo<Float,Boolean> number1;//class is of type Integer		number1=new GenericDemo(2.3f,4.5f,true,false);		System.out.println(number1.getA()+" "+number1.getB());				/*		GenericDemo<String> number2;//class is of type Integer		number2=new GenericDemo<>("one","two");		System.out.println(number2.getA()+" "+number2.getB());*/




package collectionclasses;import java.util.Iterator;import java.util.Set;import java.util.TreeSet;public class TreeSetExample1 {			public static void main(String[] args) {		Set<Employee> s=new TreeSet<Employee>(); 				//treeset extends SortedSet extends Set			     s.add(new Employee(105,"sam",20000.0));	     s.add(new Employee(106,"rakshith",24000));	     s.add(new Employee(103,"rakshith",25000));	     	     Iterator<Employee> iterator=s.iterator();	     	     while(iterator.hasNext()) {	    	 System.out.println(iterator.next());	     }	} }	class Employee implements Comparable	{		int id;		String name;		double salary;		public Employee(int id, String name, double salary) {			super();			this.id = id;			this.name = name;			this.salary =salary ;		}		@Override		public String toString() {			return "Employee [id=" + id + ", name=" + name + ", salary=" + salary + "]";		}		@Override		public int compareTo(Object o) {			// TODO Auto-generated method stub			Employee emp=(Employee)o
@Override		public int compareTo(Object o) {			// TODO Auto-generated method stub			Employee emp=(Employee)o;			if(this.id==emp.id)//106==103			return 0;			else if(this.id>emp.id)				return 1;			else				return -1;		}	}
